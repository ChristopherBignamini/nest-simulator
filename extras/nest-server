#!/bin/bash

HOST="127.0.0.1"
PORT=5000
USER=$USER
DAEMONIZE=1

usage() {
  echo "NEST Server"
  echo "-----------"
  echo "Usage: $0 log|status|start|stop|restart [-o] [-h <HOST>] [-p <PORT>] [-u <UID>]" >&2; exit 1
}

log() {
  tail -f /tmp/nest-server.log
}

pid() {
  pgrep -f "uwsgi --module nest.web:app --http-socket $HOST:$PORT --uid $USER"
}

ps-aux() {
  ps aux | grep "[u]wsgi --module nest.web:app"
}

ps-check() {
  status | grep "$HOST:$PORT"
}

ps-cmd() {
  ps-aux | awk '{ for(i=1;i<=NF;i++) {if ( i >= 11 ) printf $i" "}; printf "\n" }'
}

start() {
  echo "NEST Server"
  echo "-----------"

  if [ "`ps-check`" ]; then
    echo "NEST Server is already serving at http://$HOST:$PORT."
  else
    if [ $DAEMONIZE == 1 ]; then
      uwsgi --module nest.web:app --http-socket $HOST:$PORT --uid $USER --daemonize "/tmp/nest-server.log"
      echo "NEST Server is serving at http://$HOST:$PORT."
      read -p "Press any key to stop... "
      stop
    else
      uwsgi --module nest.web:app --http-socket $HOST:$PORT --uid $USER
    fi
  fi
}

status() {
  printf "HTTP-SOCKET\t\tUID\n"
  ps-cmd | awk '{ for(i=1;i<=NF;i++) {if ( i == 5 || i == 7 ) printf $i"\t\t"}; printf "\n" }'
}

stop() {
  if [ `pid` ]; then
    kill -9 `pid`
    echo "NEST server serving at http://$HOST:$PORT has stopped."
  else
    echo "NEST server is not serving at http://$HOST:$PORT."
  fi
}

CMD=$1; shift
while getopts "h:op:u:" opt; do
    case $opt in
        h) HOST=$OPTARG ;;
        o) DAEMONIZE=0 ;;
        p) PORT=$OPTARG ;;
        u) USER=$OPTARG ;;
    esac
done

case "$CMD" in
  log) log ;;
  pid) pid ;;
  restart) stop; sleep .5; start ;;
  start)   start ;;
  status)  status ;;
  stop)    stop ;;
  *) usage ;;
esac
